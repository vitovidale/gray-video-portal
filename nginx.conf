server {
    listen 80;

    # Serve os arquivos estáticos do front-end
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html; # Garante que SPAs funcionem (se houver)
    }

    # Redireciona requisições de API para o user-auth-service
    location /login {
        proxy_pass http://user-auth-service:5000/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /register {
        proxy_pass http://user-auth-service:5000/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redireciona requisições de API para o video-processor-service
    location /upload {
        proxy_pass http://video-processor-service:5001/upload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ ^/videos/(.*)$ { # Regex para capturar /videos/status ou /videos/:id/download
        proxy_pass http://video-processor-service:5001/videos/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}